<<partial-plots-base-child>>=
# This script creates a more customized plot using baseplot

# this creates the dataframes: others and groups
g <- partial_groups
o <- partial_continuous
g <- subset(g, !is.na(value))
g <- subset(g, median < 1)

o <- plyr::ddply(o, c("stage", "predictor"), plyr::mutate, adj = -
  mean(median, na.rm = TRUE), median = median + adj, lower = lower
  + adj, upper = upper + adj)
g.adj <- mean(g$median)
g <- transform(g, median = median - g.adj, lower = lower - g.adj, upper = upper - g.adj)

lwd.u <- c(rep(2.0, 4), 2.9)
pal <- rev(colorspace::rainbow_hcl(4, c = 90, l = 65))
pal <- c(pal, "#000000")
pch <- c(rep(19, 4), 19)
cex <- c(rep(0.55, 4), .68) * 1.4
lwd <- c(rep(1.5, 4), 2.6)
col.axis <- "grey65"
cex.axis <- 0.85
cols.plot <- 3:7
col.main.labels <- "grey15"
col.axis.labels <- "grey45"
col.left.axis.label <- "grey20"
g.ylim.l <- -0.5
g.ylim.u <- 0.6
o.ylim.l <- -0.5
o.ylim.u <- 0.6
o.y.axis.at <- c(-0.5, 0, 0.6)
g.y.axis.at <- c(-0.5, 0, 0.6)
rect.cols <- rep(c("grey94", NA), 99)
o.y.axis.labs <- c("-", "0", "+")
g.y.axis.labs <- c("-", "0", "+")

# Reshape data:
junk <- do.call("rbind", strsplit(as.character(g$value), "_"))
g$.class <- junk[, 1]
g$.order <- junk[, 2]
g$value <- NULL
g[g$.class %in% c("Mammalia", "Elasmobranchii", "Testudines"),
  ".class"] <- "Chordata"
g[g$.order %in% "az", ".order"] <- "Azoozanthelate"
g[g$.order %in% "other", ".order"] <- "Other"
g[g$.class %in% "Decapoda", ".class"] <- "Dec."

class.means <- plyr::ddply(subset(g, stage == "all"), ".class",
  plyr::summarize, class.mean.resp = mean(median))
order.means <- plyr::ddply(subset(g, stage == "all"), ".order",
  plyr::summarize, order.mean.resp = mean(median))

g.l <- reshape2::dcast(g,  .class + .order ~ stage, value.var = "lower")
g.u <- reshape2::dcast(g,  .class + .order ~ stage, value.var = "upper")
g <- reshape2::dcast(g,  .class + .order ~ stage, value.var = "median")

g <- plyr::join(g, class.means, by = ".class")
g <- plyr::join(g, order.means, by = ".order")
g <- g[order(-g$class.mean.resp, -g$order.mean.resp), ]

g.l <- plyr::join(g.l, class.means, by = ".class")
g.l <- plyr::join(g.l, order.means, by = ".order")
g.l <- g.l[order(-g.l$class.mean.resp, -g.l$order.mean.resp), ]

g.u <- plyr::join(g.u, class.means, by = ".class")
g.u <- plyr::join(g.u, order.means, by = ".order")
g.u <- g.u[order(-g.u$class.mean.resp, -g.u$order.mean.resp), ]

# for convenience:
n.class <- length(unique(g$.class))
n.tot <- nrow(g)

# assign class numbers for convenience:
c.num.df <- data.frame(c.num = 1:n.class, .class = unique(g$.class),
  stringsAsFactors = FALSE)
g <- plyr::join(g, c.num.df, by = ".class")
g.u <- plyr::join(g.u, c.num.df, by = ".class")
g.l <- plyr::join(g.l, c.num.df, by = ".class")

# figure out x positions:
g$x.pos <- 1:nrow(g)
g.l$x.pos <- 1:nrow(g.l)
g.u$x.pos <- 1:nrow(g.u)
diffs <- diff(g$c.num)
g$diffs <- c(1, diffs)
x.gap <- .4
x.gap.lab <- -.3
diffs <- diffs*x.gap
g$x.pos <- g$x.pos + cumsum(c(0, diffs))
g.l$x.pos <- g.l$x.pos + cumsum(c(0, diffs))
g.u$x.pos <- g.u$x.pos + cumsum(c(0, diffs))

o.names <- data.frame(predictor = c("occupancy", "occurrences",
    "richness", "great.circle", "max.lat", "min.lat", "mean.lat",
    "lat.range"),
  predictor.clean = c("Occupancy", "Occurrences", "Number of species",
    "Great circle distance", "Maximum latitude", "Minimum latitude",
    "Mean latitude", "Latitude range"), axis.1 = c(rep("c(0, 0.5)", 3),
    "c(5000, 15000)", rep("c(0, 30, 60)", 3), "c(0, 30, 60)"),
  xlim = c(rep("c(0, 1)", 3), "c(1800, 20100)", rep("c(0, 70)", 4)),
  units = c(rep("Scaled value", 3), "Km", rep("Absolute degrees", 3),
    "Absolute Degrees"), stringsAsFactors = FALSE)

o <- plyr::join(o, o.names, by = "predictor")

o$predictor <- factor(o$predictor, levels = c("occupancy",
    "occurrences", "richness", "great.circle", "max.lat", "min.lat",
    "mean.lat", "lat.range"))

if(length(unique(o$stage)) == 5) {
  col_df <- data.frame(stage = c("Early Miocene", "Middle Miocene",
      "Late Miocene", "Plio-Pleistocene", "all"), col = pal, stage_order =
    1:length(pal), lwd = lwd.u, stringsAsFactors = FALSE)
} else {
  col_df <- data.frame(stage = c("all"), col = "#000000", stage_order =
    1, lwd = max(lwd.u), stringsAsFactors = FALSE)
}

o <- plyr::join(o, col_df, by = "stage")

l <- rbind(c(1,2,3,4),
  c(5,6,7,8),
  c(9,9,9,9))

pdf("../figs/partial-plot-base.pdf", width = 5.9, height = 5.0)
layout(l)

## the upper half:
par(oma = c(5, 2.7, 1.2, .6), cex = 0.8, tck = -0.03,
  mgp = c(2, 0.35, 0), mar = c(2.4,.2,0,0))
ii <<- 0
plyr::d_ply(o, "predictor", function(x) {
  ii <<- ii + 1
  x <- x[order(x$value), ]
  plot(1, 1, xlim = eval(parse(text = unique(x$xlim))), ylim = c(o.ylim.l,
      o.ylim.u), ann = FALSE, axes = FALSE, xaxs = "i", yaxs = "i", type =
    "n")
  for(i in 1:length(unique(x$stage))) {
    dat <- subset(x, stage_order == i)
    shade_col <- paste0(dat$col, "24")
    # separate option of polygon shading for the overall model:
    if(dat$stage_order[1] == 5) shade_col = paste0(dat$col, "34")
    with(dat, polygon(c(value, rev(value)), c(lower, rev(upper)), border =
        NA, col = shade_col))
    with(dat, lines(value, median, col = col, lwd = lwd))
  }
  box(col = col.axis)
  axis(1, las = 1, col = col.axis, col.axis = col.axis, cex.axis =
    cex.axis, padj = -0.5, at = eval(parse(text = unique(x$axis.1))))
  if(ii %in% c(1, 5)) axis(2, at = o.y.axis.at, labels = o.y.axis.labs, las = 1, col = col.axis,
    col.axis = col.axis, cex.axis = cex.axis)

  if(ii == 3 & length(unique(o$stage)) > 1) {
    par(xpd = NA)

    legend_stages <- col_df$stage
    legend_stages <- sub("all", "Neogene-Pleist.", legend_stages)

    legend(-2.15, par("usr")[4] * 1.45, legend = legend_stages, bty = "n",
      cex = 0.8, text.col = "grey40", fill = pal, border = pal, horiz =
      TRUE)
    par(xpd = FALSE)
  }

  u <- par("usr")
  par(xpd = NA)
  text(x = u[1] + (u[2]-u[1])*0.03, y = u[4] - (u[4]-u[3])*0.155,
    substitute(paste(bold(let), " ", lab, phantom("g")),
      list(let = LETTERS[ii], lab = unique(dat$predictor.clean))),
    cex = 0.8, adj = c(0, 0), col = col.main.labels)
  mtext(unique(x$units), side = 1, cex = 0.70, line = .8, col =
    col.axis.labels)
  par(xpd = FALSE)
  })

## lower half:
# make blank plot:
plot(1, 1, xlim = c(0.3, max(g$x.pos)+0.5), ylim = c(g.ylim.l, g.ylim.u), yaxs = "i",
  axes = FALSE, ann = FALSE, type = "n", xaxs = "i", log = "")

# shading:
rects <- subset(g, diffs == 1)
# fudge an extra row for the last rect if odd number:
rects <- rbind(rects, rects[nrow(rects), ])
rects[nrow(rects), "x.pos"] <- 99
for(i in 1:(nrow(rects)-1)) {
  rect(rects[i, "x.pos"]-x.gap + x.gap.lab, g.ylim.l, rects[i+1, "x.pos"] -
    x.gap + x.gap.lab, g.ylim.u, border = NA, col = rect.cols[i])
}

# vertical lines:
#abline(v = g$x.pos, col = "#00000010", lwd = .6)

# the points and lines:
add.seg <- TRUE

if("Early Miocene" %in% names(g)) {
  stage_ord <- c("Early Miocene", "Middle Miocene",
    "Late Miocene", "Plio-Pleistocene", "all")
} else {
  stage_ord <- c("all")
  pal <- "#000000"
  cex <- max(cex)
  lwd <- max(lwd)
}
box(col= col.axis)

for(i in 1:length(stage_ord)) {
  ci <- which(names(g) == stage_ord[i]) # [c]olumn [i]
  par(xpd = NA)
  points(g$x.pos, g[,ci], col = pal[i], pch = pch[i], cex = cex[i])
  par(xpd = FALSE)
  segments(g.l$x.pos, g.l[,ci], g.u$x.pos, g.u[,ci], col =
    paste0(pal[i], 30), lwd = 1.5)
  if(add.seg) { # for speed of development
    plyr::d_ply(g, ".class", function(x) {
      for(j in 1:(nrow(x)-1)){
        if(nrow(x) > 1) {
          # the lines connecting the dots:
          segments(x[j,"x.pos"], x[j, ci], x[j,"x.pos"]+1, x[j+1, ci] ,
            col = paste0(pal[i], 50), lwd = lwd[i])
        }
      }
    })
  }
}

# axes and labels:
axis(2, at = g.y.axis.at, labels = g.y.axis.labs, las = 1, col = col.axis, col.axis = col.axis,
  cex.axis = cex.axis)
par(xpd = NA)

labs <- plyr::ddply(g, ".class", plyr::summarize, x.mid = min(x.pos) +
  diff(range(x.pos))/2, l = min(x.pos), u = max(x.pos))

with(labs, text(x = x.mid, y = g.ylim.l - 1.28, label = .class, srt = 0, col =
    col.main.labels, cex = 0.9, adj = c(0.5, 0)))

u.s <- with(labs, u+x.gap-x.gap.lab-0.12)
l.s <- with(labs, l-x.gap+x.gap.lab+0.12)
h.s <- with(labs, rep(-1.53, length(l.s)))

with(labs, segments(l.s, h.s, l.s, h.s-0.1, col = col.axis))
with(labs, segments(u.s, h.s, u.s, h.s-0.1, col = col.axis))
with(labs, segments(l.s, h.s-0.1, u.s, h.s-0.1, col = col.axis))

with(g, text(x = x.pos, y = g.ylim.l -0.05, label = .order, srt = 90, pos = 2,
    col = col.axis.labels, offset = 0, cex = 0.85))
par(xpd = FALSE)

u <- par("usr")
par(xpd = NA)

text(x = 0.60, y = u[3] + (u[4]-u[3])*.035, substitute(paste(bold(let),
      " ", lab, phantom("g")), list(let = LETTERS[ii+1], lab =
      "Taxonomy")), cex = 0.8, adj = c(0, 0), col = col.main.labels)

mtext("Marginal effect on extinction risk", side = 2,
  outer = FALSE, col = col.left.axis.label, line = 1.7, cex = 0.75, adj
  = -0.43)

dev.off()
@
