<<plot-cross-interval-gbms-child>>=
# Re-order stage names:
cross_pred <- na.omit(cross_pred)
stage_order <- c("Lower Miocene", "Middle Miocene", "Upper Miocene",
  "Plio-Pleistocene")
cross_pred$stage_test <- factor(cross_pred$stage_test,
  levels = stage_order)
cross_pred$stage_train <- factor(cross_pred$stage_train,
  levels = stage_order)
cross_pred$class <- factor(cross_pred$class, levels =c("Gastropoda","Bivalvia","Anthozoa","Echinoidea","Elasmobranchii","Mammalia"))

newclass <- data.frame(c("Gastropoda","Bivalvia","Anthozoa","Echinoidea",
    "Elasmobranchii","Mammalia"),
  c("Gastropoda","Bivalvia","Scleractinia", 
    "Echinoidea", "Sharks", "Mammalia"))
colnames(newclass) <- c("class","class2")
cross_pred2 <- merge(cross_pred,newclass,by="class")

# Extract R^2 values for all correlations except within-interval
# comparisons:
# Note: these are no longer R^2 values, they are straight
# Spearman's correlations even though the function and
# object names are named otherwise
Rsq <- function(df) {
  Rsq <- cor(df$pred,df$pred_self,method="spearman")
  return(Rsq)
}

Rsqs <- ddply(cross_pred2, plyr::.(stage_train,stage_test), plyr::each(Rsq))
Rsqs <- na.omit(Rsqs[(Rsqs$stage_train != Rsqs$stage_test),])
Rsqs$Rsq <- round(Rsqs$Rsq,2)

Rsqs$Rsq_sp <- sprintf("%.2f", Rsqs$Rsq)
cross_pred2 <- plyr::join(cross_pred, Rsqs)
cols <- RColorBrewer::brewer.pal(6, "Set2")[c(2,1,3,4,5,6)]
cols_df <- data.frame(
  class = c("Anthozoa", "Bivalvia", "Echinoidea",
    "Elasmobranchii", "Gastropoda", "Mammalia"),
  cols_solid = cols,
  cols_outer = paste0(cols, "70"),
  cols_inner = paste0(cols, "10"),
  proper_name = c("Scleractinia", "Bivalvia", "Echinoidea",
    "Sharks", "Gastropoda", "Mammalia"),
  stringsAsFactors = FALSE)
cross_pred2 <- plyr::join(cross_pred2, cols_df)

pdf("../figs/plot-cross-interval-gbms-base.pdf", width = 4.7, height = 4.8)
par(mfrow = c(4,4), mar = c(0,0,0,0), cex = 0.5, oma = c(3.8, 4.0, 4, 2), 
  mgp = c(2, 0.4, 0), tck = -0.02)
par(las = 1)
lim_lower <- min(c(cross_pred$pred_self, cross_pred$pred))
i <<- 0
plyr::d_ply(cross_pred2, c("stage_train", "stage_test"), function(x) {
  i <<- i + 1
  with(x, plot(pred_self, pred, col = cols_outer, bg = cols_inner, pch = 21,
      axes = FALSE, log = "xy", xlim = c(lim_lower, 1), ylim = c(lim_lower, 1),
      yaxs = "i", xaxs = "i"))
  box(col = "grey50", lwd = 0.8)
  if(i %in% seq(1, 13, 4)) axis(2, at = c(0.01, 0.1, 1), col = "grey50",
    col.axis = "grey50", lwd = 0.8)
  if(i %in% seq(13, 16)) axis(1, at = c(0.01, 0.1, 1), col = "grey50", col.axis
    = "grey50", lwd = 0.8)
  if(i %in% seq(1, 4))
    mtext(unique(x$stage_test), side = 3, cex = 0.6, col = "grey50", 
      line = 0.3)
  if(i %in% seq(4, 16, 4))
    mtext(unique(x$stage_train), side = 4, cex = 0.6, col = "grey50", 
      las = 0, line = 0.3)
  text(0.005, 0.7, labels = unique(x$Rsq_sp), col = "grey50")
  if(i == 1) {
    par(xpd = NA)
    legend(0.0032, 8.5, legend = cols_df$proper_name, bty = "n", cex = 1.1,
      text.col = "grey50", horiz = TRUE, pch = 21, pt.bg =
      paste0(cols_df$cols_solid, 40), col = paste0(cols_df$cols_solid, 98))
      par(xpd = FALSE)
  }
    })
mtext("Scaled extinction probability (stage that model was built on)", 
  side = 1, outer = TRUE, col = "grey50", cex = 0.6, line = 2.2)
mtext("Scaled extinction probability (stage that model was tested on)", 
  side = 2, outer = TRUE, col = "grey50", cex = 0.6, line = 2.8, las = 0)
par(xpd = NA)
dev.off()
@
